// api 返回json模版
{
    "errCode": , // [int] 0:成功 1:未登录 2:其他错误
    "data": , // [object or array] api返回数据
    "errMsg": // [string] 错误描述
}



//api返回数据结构为模版里data字段


// =========================================================
// 基础接口
// =========================================================

// 登录接口
// param：登录名（邮箱），登录密码
// 登录名是否用邮箱即可？
{
    用户权限：{
        组织管理: [
            查询,
            新建,
            ...
        ],
        ...
    }
}

// 登出接口
// 成功与失败通过errcode判断，data为空即可

//省市区数据你出接口？还是我直接找个json数据算了？牵扯到后面接口传参

// 组织结构接口
// param details: true 
// 如果有details参数则返回下面详细数据，如果没有details这个参数，则只返回组织名称即可
{
    组织名称,
    所在地区,
    详细地址,
    负责人,
    联系电话children: [
        {},
        ...
    ]
}

// 角色职能字典
[
    {
        id,
        描述
    },
    ...
]

// 角色职级字典
[
    {
        id,
        描述
    },
    ...
]

// 权限字典
{
    id,
    权限名称,
    功能: [
        查询，
        新建，
        ...
    ]
    children: [
        {
            id,
            权限名称，
            功能，
            children
        },
        ...
    ]
} 



// =========================================================
// 组织管理
// =========================================================

// 新建
// param 组织名称, 父级组织id, 省（id）, 市（id）, 区（id）, 详细地址, 负责人， 联系电话
{} // 成功与失败通过errcode判断，data为空即可

// 详情
// param 组织id
{
    组织id，
    组织名称,
    父级组织id,
    省（id）,
    市（id）,
    区（id）,
    详细地址,
    负责人，联系电话
}

// 编辑
// param 组织id, 组织名称, 父级组织id, 省（id）, 市（id）, 区（id）, 详细地址, 负责人， 联系电话
{} // 成功与失败通过errcode判断，data为空即可

// 删除
// param 组织id,组织id, ... 可批量删除，多个用逗号分割
{} // 成功与失败通过errcode判断，data为空即可



// =========================================================
// 角色管理
// =========================================================

// 列表
// param 组织id 
[
    {
        角色职能: [
            市场,
            销售,
            客服,
            ...
        ],
        角色职级,
        角色名称,
        角色描述
    },
    ...
]

// 新建
// param 组织id, 角色职能, 角色职级, 角色名称, 角色描述
// 成功与失败通过errcode判断，data为空即可

// 详情
// param 角色id
{
    角色id
    组织id，
    角色职能, 
    角色职级, 
    角色名称, 
    角色描述
}

// 编辑
// param 组织id, 角色id, 角色职能, 角色职级, 角色名称, 角色描述
// 成功与失败通过errcode判断，data为空即可

// 删除
// param 角色id,角色id, ... 可批量删除，多个用逗号分割
// 成功与失败通过errcode判断，data为空即可



// =========================================================
// 用户管理
// =========================================================

// 列表
// param 组织id
[
    {
        用户id,
        启用状态,
        用户名,   // 如果用邮箱做登录名，则可以不要这个字段
        登录密码, // 登录密码如果不是明文，则可以不要这个字段
        姓名,
        英文名,
        电话号码,
        电子邮件,
        IM(QQ...),
        用户角色
    },
    ...
]

// 新建
// param 组织id, 用户名, 登录密码, 姓名, 英文名, 电话号码, 电子邮箱, IM(QQ..)
// 成功与失败通过errcode判断，data为空即可

// 详情
// param 用户id
{
    用户id,
    组织id, 
    用户名, 
    登录密码, 
    姓名, 
    英文名, 
    电话号码, 
    电子邮箱, 
    IM(QQ..)
}

// 编辑
// param 用户id, 组织id, 用户名, 登录密码, 姓名, 英文名, 电话号码, 电子邮箱, IM(QQ..)
// 成功与失败通过errcode判断，data为空即可

// 启用 or 停用
// param 用户id,用户id, ... 可批量删除，多个用逗号分割， 状态（enable or disable）
// 成功与失败通过errcode判断，data为空即可

// 删除
// param 用户id,用户id, ... 可批量删除，多个用逗号分割
// 成功与失败通过errcode判断，data为空即可


// =========================================================
// 权限管理
// =========================================================

// 获取已配置权限信息
// param 组织id, 角色id
[
    {
        id,
        功能: [
            查询，
            新增，
            ...
        ]
    },
    ...
]

// 设置
// param 组织id, 角色id, 权限list [json]   eg. [ {权限id， 功能: [查询，新增， ...]}, {}, ... ]
// 成功与失败通过errcode判断，data为空即可